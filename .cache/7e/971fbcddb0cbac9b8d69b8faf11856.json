{"id":"mMOi","dependencies":[{"name":"C:\\Users\\S de Santi\\Desktop\\NewProject\\package.json","includedInParent":true,"mtime":1624620152425},{"name":"C:\\Users\\S de Santi\\Desktop\\NewProject\\node_modules\\colyseus.js\\package.json","includedInParent":true,"mtime":1624300838072}],"generated":{"js":"\"use strict\"; // Use codes between 0~127 for lesser throughput (1 byte)\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.utf8Length = exports.utf8Read = exports.ErrorCode = exports.Protocol = void 0;\nvar Protocol;\n\n(function (Protocol) {\n  // Room-related (10~19)\n  Protocol[Protocol[\"HANDSHAKE\"] = 9] = \"HANDSHAKE\";\n  Protocol[Protocol[\"JOIN_ROOM\"] = 10] = \"JOIN_ROOM\";\n  Protocol[Protocol[\"ERROR\"] = 11] = \"ERROR\";\n  Protocol[Protocol[\"LEAVE_ROOM\"] = 12] = \"LEAVE_ROOM\";\n  Protocol[Protocol[\"ROOM_DATA\"] = 13] = \"ROOM_DATA\";\n  Protocol[Protocol[\"ROOM_STATE\"] = 14] = \"ROOM_STATE\";\n  Protocol[Protocol[\"ROOM_STATE_PATCH\"] = 15] = \"ROOM_STATE_PATCH\";\n  Protocol[Protocol[\"ROOM_DATA_SCHEMA\"] = 16] = \"ROOM_DATA_SCHEMA\";\n})(Protocol = exports.Protocol || (exports.Protocol = {}));\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"MATCHMAKE_NO_HANDLER\"] = 4210] = \"MATCHMAKE_NO_HANDLER\";\n  ErrorCode[ErrorCode[\"MATCHMAKE_INVALID_CRITERIA\"] = 4211] = \"MATCHMAKE_INVALID_CRITERIA\";\n  ErrorCode[ErrorCode[\"MATCHMAKE_INVALID_ROOM_ID\"] = 4212] = \"MATCHMAKE_INVALID_ROOM_ID\";\n  ErrorCode[ErrorCode[\"MATCHMAKE_UNHANDLED\"] = 4213] = \"MATCHMAKE_UNHANDLED\";\n  ErrorCode[ErrorCode[\"MATCHMAKE_EXPIRED\"] = 4214] = \"MATCHMAKE_EXPIRED\";\n  ErrorCode[ErrorCode[\"AUTH_FAILED\"] = 4215] = \"AUTH_FAILED\";\n  ErrorCode[ErrorCode[\"APPLICATION_ERROR\"] = 4216] = \"APPLICATION_ERROR\";\n})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\n\nfunction utf8Read(view, offset) {\n  var length = view[offset++];\n  var string = '',\n      chr = 0;\n\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view[i];\n\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode((byte & 0x1f) << 6 | view[++i] & 0x3f);\n      continue;\n    }\n\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode((byte & 0x0f) << 12 | (view[++i] & 0x3f) << 6 | (view[++i] & 0x3f) << 0);\n      continue;\n    }\n\n    if ((byte & 0xf8) === 0xf0) {\n      chr = (byte & 0x07) << 18 | (view[++i] & 0x3f) << 12 | (view[++i] & 0x3f) << 6 | (view[++i] & 0x3f) << 0;\n\n      if (chr >= 0x010000) {\n        // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n\n      continue;\n    }\n\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n\n  return string;\n}\n\nexports.utf8Read = utf8Read; // Faster for short strings than Buffer.byteLength\n\nfunction utf8Length(str) {\n  if (str === void 0) {\n    str = '';\n  }\n\n  var c = 0;\n  var length = 0;\n\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      length += 1;\n    } else if (c < 0x800) {\n      length += 2;\n    } else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    } else {\n      i++;\n      length += 4;\n    }\n  }\n\n  return length + 1;\n}\n\nexports.utf8Length = utf8Length;"},"sourceMaps":null,"error":null,"hash":"040cc843421765f835770267af761cf8","cacheData":{"env":{}}}